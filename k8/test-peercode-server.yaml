apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: peercode-server
  name: peercode-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: peercode-server
  template:
    metadata:
      labels:
        io.kompose.network/network: "true"
        app: peercode-server
    spec:
      containers:
      - name: peercode-server
        image: public.ecr.aws/a6n0p1z7/peercode-test:latest-peercode-server-service
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: JUDGE_SERVICE_URL
          value: http://judge.peercode.net:2358
        - name: KAFKA_GROUP_SERVER
          value: kafka_group_server
        - name: KAFKA_SERVER_NAME
          value: peercode-kafka:19092
        - name: KAFKA_TOPICS
          value: errors,users,question_service,question_bank,question_of_the_day
        - name: KAFKA_TOPIC_QUESTION_BANK
          value: question_bank
        - name: KAFKA_TOPIC_QUESTION_OF_THE_DAY
          value: question_of_the_day
        - name: KAFKA_TOPIC_QUESTION_SERVICE
          value: question_service
        - name: MONGO_PEERCODE_DATABASE_NAME
          valueFrom:
              secretKeyRef:
                name: secret
                key: MONGO_PEERCODE_DATABASE_NAME
        - name: MONGO_PEERCODE_DATABASE_PASSWORD
          valueFrom:
              secretKeyRef:
                name: secret
                key: MONGO_PEERCODE_DATABASE_PASSWORD
        - name: MONGO_PEERCODE_DATABASE_USER
          valueFrom:
              secretKeyRef:
                name: secret
                key: MONGO_PEERCODE_DATABASE_USER
        - name: MONGO_PEERCODE_HOST_NAME
          valueFrom:
              secretKeyRef:
                name: secret
                key: MONGO_PEERCODE_HOST_NAME
        - name: MONGO_PEERCODE_URL
          valueFrom:
              secretKeyRef:
                name: secret
                key: MONGO_PEERCODE_URL
        - name: QUESTION_SERVICE_URL
          value: http://peercode-question-service:5001/api/v1/question
        - name: SERVER_PORT
          value: "5000"
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: peercode-server
  name: peercode-server
spec:
  type: LoadBalancer
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    app: peercode-server
